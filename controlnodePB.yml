---
  - hosts: controlnode
    remote_user: ansible
    vars:
      internal_if: enp0s8
      public_if: enp0s3
      internal_ip: 192.168.6.5
      admin_pass: iq156sr7
      
    - tasks
## Configure firewall
  # ensure that the firewalld is started and enabled
      - name: enable and start firewalld
        systemd:
          name: firewalld
          enabled: yes
          state: started
          
  # set internal zone interface
      - name: set internal zone interface
        firewalld:
          interface: "{{ internal_if }}"
          permanent: true
          state: enabled
          
## Install NTP Server to adjust the date
  # Install NTPd and Configure NTP server for time adjustment      
      - name: install ntp
        yum:
          name: ntp
          state: latest
      
      - name: configure ntp
        lineinfile:
          dest: /etc/ntp.conf
          regex: '^#restict 192.168.1.0'
          line: 'restrict 192.168.6.0 mask 255.255.255.0 nomodify notrap'
      - name: Start and enable ntpd
        systemd:
          name: ntpd
          enabled: yes
          stated: started
          
  # Add the ntp service to the firewall rules
      - name: allowing the ntp service through the firewall
        firewalld:
          service: ntp
          permanent: true
          state: enabled
          zone: public
## Add the repository of Openstack Ocata and Epel
  # install the centos7 openstack ocata release
      - name: add the openstack ocata repo
        yum:
          name: centos-release-openstack-ocata
          state: present
          
      - name: add the epel repo
        yum:
          name: epel-release
          state: present
## Install and configure MariaDB Server
  # install mariadb form openstack ocata
      - name:
        yum:
          name: mariadb
          enablerepo: centos-openstack-ocata
          state: present
  
  # configure mariadb /etc/my.conf file
      - name: add character-set-server
        lineinfile:
          dest: /etc/my.cnf
          insertafter: '^\[mysqld\]'
          line: character-set-server=utf8
  
  # start and enable mariadb
      - name: start and enable mariadb
        systemd:
          name: mariadb
          enabled: yes
          state: started
          
  # initial settings for mariadb
  
    # set root password
    # remove anonymous users
    # disallow root login remotely
    # remove test database
    # reload privilege tables
    # connect to MariaDB with root
  
  # add the mysql service to the firewall
      - name: add the mysql service to the firewall
        firewalld:
          service: mysql
          permanent: true
          state: enabled
          zone: internal
          
## install and configure rabbitmq, memcached
  # install rabbitmq and memcached
      - name: install rebbitmq and memcached
        yum:
          name: "{{ item }}"
          enablerepo: epel
          state: present
        with_items:
          - rabbitmq-server
          - memcached
          
  # start and enable rabbitmq memcached
      - name: enable rabbitmq and memcached
        systemd:
          name: "{{ item }}"
          enabled: yes
          state: started
        with_items:
          - rabbitmq-server
          - memcached
  
  # add openstack user (set any password you like for "password"
    # rabbitmqctl add_user openstack password
  
    # rabbitmqctl set_permissions openstack * * *
    
  # add ports 11211/tcp & 5672/tcp to firewalld
      - name: add ports to firewall
        firewalld:
          port: "{{ item }}"
          permanent: true
          state: enabled
          zone:internal
        with_items:
          - 11211/tcp
          - 5672/tcp
        
## Install and Configure Openstack Identity Service (Keystone)
  # add a user and database on mariadb for Keystone
    # mysql -u root -p
    # create database keystone;
    # grant all privileges on keystone.* to keystone@'localhost' identified by 'password';
    # grant all privileges on keyston.* to keystone@'%' identified by 'password';
    # flush privileges
    
  # install keystone
      - name: install keystone
        yum:
          name: "{{ item.name }}"
          enablerepo: "{{ item.repo }}"
          state: present
        with_items:
          - { name: openstack-keystone, repo: centos-openstack-ocata }
          - { name: openstack-utils, repo: centos-openstack-ocata }
          - { name: python-openstackclient, repo: centos-openstack-ocata }
          - { name: httpd, repo: epel }
          - { name: mod_wsgi, repo: epel }
  
  # Configure Keystone file /etc/keystone/keystone.conf
    # line 714: add (MariaDB connection info)   
      - name: line 714: add (MariaDB connection info)
        lineinfile:
          dest: /etc/keystone/keystone.conf
          insertafter: '^#connection = <None>'
          line: 'connection = mysql+pymysql://keystone:password@{{ internal_ip }}/keystone'
          state: present
    
    # line 1494: specify Memcache server
      - name: line 1494: specify memcache server
        lineinfile:
          dest: /etc/keystone/keystone.conf
          insertafter: '^\[memcache\]'
          line: 'servers = {{ internal_ip }}:11211'
          state: present
          
    # line 2791 add provider and driver
      - name: line 2791 add provider and driver
        blockinfile:
          dest: /etc/keystone/keystone.conf
          insertafter: '^\[token\]'
          block: |
            provider = fernet
            driver = memcache
            
    # change the shell of the keystone user | pass keystone-manager and db_sync into the shell
      - name: change the shell of the keystone user
        command: su -s /bin/bash keystone -c "keystone-manage db_sync"
        
    # initialize keys
      - name: initialize keys fernet_setup
        command: keystone-manage fernet_setup --keystone-user keystone --keystone-group keystone
        
      - name: initialize keys credential_setup
        command: keystone-manage credential_setup --keystone-user keystone --keystone-group keystone
      
    # define own (controller host) host
      - name: export host controller
        command: export controller={{ internal_ip }}
        
    # bootstrap keystone (replace any password you like for "adminpassword" section)
      - name: 
        command: keystone-manage bootstrap arg1 arg2 arg3 arg4 arg5
        args:
          --bootstrap-password {{ admin_pass }}
          --bootstrap-admin-url http://$controller:35357/v3/
          --bootstrap-internal-url http://$controller:35357/v3/
          --bootstrap-public-url http://$controller:5000/v3/
          --bootstrap-region-id RegionOne
  
  # change boolean settings
      - name: enalbe httpd boolean setting
        seboolean:
          name: "{{ item }}"
          state: yes
          persistent: yes
        with_items:
          - httpd_use_openstack
          - httpd_can_network_connect
          - httpd_can_network_connect_db
  # Enableconfig for Keystone ans start Apache httpd
    # create a soft link between /usr/share/keystone/wsgi-keystone.conf /etc/httpd/conf.d
      - name: create a symlink keyston the httpd conf 
        file:
          src: /usr/share/keystone/wsgi-keystone.conf
          dest: /etc/httpd/conf.d
          state: link
    
    # start and enable httpd
      - name: start and enable httpd
        systemd:
          name: httpd
          enabled: yes
          state: started
  # Firewall allow ports 5000/tcp & 35357/tcp for public services
      - name: add fir
        firewalld:
          port: "{{ item }}"
          permanent: true
          enable: yes
          zone: public
        with_items:
          - 5000/tcp
          - 35357/tcp
  
  # Firewall allow ports 5000/tcp & 35357/tcp for internal services

...
